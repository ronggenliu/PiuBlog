/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'liuronggen' at '1/29/16 6:58 PM' with Gradle 2.5
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/2.5/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'spring-boot'

sourceCompatibility = 1.8
targetCompatibility = 1.8
version = '0.1'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
    mavenLocal()
    maven { url 'http://repo.spring.io/libs-release' }
    maven { url "http://repo.springsource.org/repo" }
}

bootRun {
    systemProperties = System.properties
}
// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api'

    // spring boot
    compile "org.springframework.boot:spring-boot-starter-web"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.springframework.boot:spring-boot-starter-thymeleaf"
    compile "com.domingosuarez.boot:spring-boot-starter-jade4j:0.3.1"
    compile "org.springframework.boot:spring-boot-devtools"
    
    // spring framework
    compile 'org.springframework:spring-context'
    compile 'org.springframework:spring-webmvc'
    compile 'org.springframework.security:spring-security-config'
    compile 'org.springframework.security:spring-security-web'

	// static resources, ref. http://www.webjars.org/
    compile 'org.webjars:jquery:2.1.4'
    compile 'org.webjars:bootstrap:3.3.5'
    compile 'org.webjars:font-awesome:4.3.0-3'

    // MySQL
    compile 'mysql:mysql-connector-java:+'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit'
}

buildscript {
    ext {
        springBootVersion = '1.3.2.RELEASE'
    }

    repositories {
    	flatDir {
        	dirs '/Users/liuronggen/.gradle/caches/modules-2/files-2.1'
    	}
        mavenLocal()
        jcenter()

        maven { url "http://repo.spring.io/release" }
        maven { url "http://repo.spring.io/milestone" }
        maven { url "http://repo.spring.io/snapshot" }
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
}
